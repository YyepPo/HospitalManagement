{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePickerViews = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useViews = require(\"../useViews\");\nvar _timeUtils = require(\"../../utils/time-utils\");\nconst _excluded = [\"className\", \"sx\"];\n/**\n * Props used to handle the views that are common to all pickers.\n */\n\n/**\n * Props used to handle the views of the pickers.\n */\n\n/**\n * Props used to handle the value of the pickers.\n */\n\n/**\n * Manage the views of all the pickers:\n * - Handles the view switch\n * - Handles the switch between UI views and field views\n * - Handles the focus management when switching views\n */\nconst usePickerViews = ({\n  props,\n  propsFromPickerValue,\n  additionalViewProps,\n  autoFocusView,\n  rendererInterceptor,\n  fieldRef\n}) => {\n  const {\n    onChange,\n    open,\n    onClose\n  } = propsFromPickerValue;\n  const {\n    view: inView,\n    views,\n    openTo,\n    onViewChange,\n    viewRenderers,\n    timezone\n  } = props;\n  const propsToForwardToView = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const {\n    view,\n    setView,\n    defaultView,\n    focusedView,\n    setFocusedView,\n    setValueAndGoToNextView\n  } = (0, _useViews.useViews)({\n    view: inView,\n    views,\n    openTo,\n    onChange,\n    onViewChange,\n    autoFocus: autoFocusView\n  });\n  const {\n    hasUIView,\n    viewModeLookup\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    let viewMode;\n    if (viewRenderers[viewForReduce] != null) {\n      viewMode = 'UI';\n    } else {\n      viewMode = 'field';\n    }\n    acc.viewModeLookup[viewForReduce] = viewMode;\n    if (viewMode === 'UI') {\n      acc.hasUIView = true;\n    }\n    return acc;\n  }, {\n    hasUIView: false,\n    viewModeLookup: {}\n  }), [viewRenderers, views]);\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    if (viewRenderers[viewForReduce] != null && (0, _timeUtils.isTimeView)(viewForReduce)) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0), [viewRenderers, views]);\n  const currentViewMode = viewModeLookup[view];\n  const shouldRestoreFocus = (0, _useEventCallback.default)(() => currentViewMode === 'UI');\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\n    setPopperView(view);\n  }\n  (0, _useEnhancedEffect.default)(() => {\n    // Handle case of `DateTimePicker` without time renderers\n    if (currentViewMode === 'field' && open) {\n      onClose();\n      setTimeout(() => {\n        fieldRef?.current?.setSelectedSections(view);\n        // focusing the input before the range selection is done\n        // calling it outside of timeout results in an inconsistent behavior between Safari And Chrome\n        fieldRef?.current?.focusField(view);\n      });\n    }\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _useEnhancedEffect.default)(() => {\n    if (!open) {\n      return;\n    }\n    let newView = view;\n\n    // If the current view is a field view, go to the last popper view\n    if (currentViewMode === 'field' && popperView != null) {\n      newView = popperView;\n    }\n\n    // If the current view is not the default view and both are UI views\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\n      newView = defaultView;\n    }\n    if (newView !== view) {\n      setView(newView);\n    }\n    setFocusedView(newView, true);\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const layoutProps = {\n    views,\n    view: popperView,\n    onViewChange: setView\n  };\n  return {\n    hasUIView,\n    shouldRestoreFocus,\n    layoutProps,\n    renderCurrentView: () => {\n      if (popperView == null) {\n        return null;\n      }\n      const renderer = viewRenderers[popperView];\n      if (renderer == null) {\n        return null;\n      }\n      const rendererProps = (0, _extends2.default)({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\n        views,\n        timezone,\n        onChange: setValueAndGoToNextView,\n        view: popperView,\n        onViewChange: setView,\n        focusedView,\n        onFocusedViewChange: setFocusedView,\n        showViewSwitcher: timeViewsCount > 1,\n        timeViewsCount\n      });\n      if (rendererInterceptor) {\n        return rendererInterceptor(viewRenderers, popperView, rendererProps);\n      }\n      return renderer(rendererProps);\n    }\n  };\n};\nexports.usePickerViews = usePickerViews;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","usePickerViews","_extends2","_objectWithoutPropertiesLoose2","React","_useEnhancedEffect","_useEventCallback","_useViews","_timeUtils","_excluded","props","propsFromPickerValue","additionalViewProps","autoFocusView","rendererInterceptor","fieldRef","onChange","open","onClose","view","inView","views","openTo","onViewChange","viewRenderers","timezone","propsToForwardToView","setView","defaultView","focusedView","setFocusedView","setValueAndGoToNextView","useViews","autoFocus","hasUIView","viewModeLookup","useMemo","reduce","acc","viewForReduce","viewMode","timeViewsCount","isTimeView","currentViewMode","shouldRestoreFocus","popperView","setPopperView","useState","setTimeout","current","setSelectedSections","focusField","newView","layoutProps","renderCurrentView","renderer","rendererProps","onFocusedViewChange","showViewSwitcher"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/node_modules/@mui/x-date-pickers/node/internals/hooks/usePicker/usePickerViews.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePickerViews = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useViews = require(\"../useViews\");\nvar _timeUtils = require(\"../../utils/time-utils\");\nconst _excluded = [\"className\", \"sx\"];\n/**\n * Props used to handle the views that are common to all pickers.\n */\n\n/**\n * Props used to handle the views of the pickers.\n */\n\n/**\n * Props used to handle the value of the pickers.\n */\n\n/**\n * Manage the views of all the pickers:\n * - Handles the view switch\n * - Handles the switch between UI views and field views\n * - Handles the focus management when switching views\n */\nconst usePickerViews = ({\n  props,\n  propsFromPickerValue,\n  additionalViewProps,\n  autoFocusView,\n  rendererInterceptor,\n  fieldRef\n}) => {\n  const {\n    onChange,\n    open,\n    onClose\n  } = propsFromPickerValue;\n  const {\n    view: inView,\n    views,\n    openTo,\n    onViewChange,\n    viewRenderers,\n    timezone\n  } = props;\n  const propsToForwardToView = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const {\n    view,\n    setView,\n    defaultView,\n    focusedView,\n    setFocusedView,\n    setValueAndGoToNextView\n  } = (0, _useViews.useViews)({\n    view: inView,\n    views,\n    openTo,\n    onChange,\n    onViewChange,\n    autoFocus: autoFocusView\n  });\n  const {\n    hasUIView,\n    viewModeLookup\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    let viewMode;\n    if (viewRenderers[viewForReduce] != null) {\n      viewMode = 'UI';\n    } else {\n      viewMode = 'field';\n    }\n    acc.viewModeLookup[viewForReduce] = viewMode;\n    if (viewMode === 'UI') {\n      acc.hasUIView = true;\n    }\n    return acc;\n  }, {\n    hasUIView: false,\n    viewModeLookup: {}\n  }), [viewRenderers, views]);\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    if (viewRenderers[viewForReduce] != null && (0, _timeUtils.isTimeView)(viewForReduce)) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0), [viewRenderers, views]);\n  const currentViewMode = viewModeLookup[view];\n  const shouldRestoreFocus = (0, _useEventCallback.default)(() => currentViewMode === 'UI');\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\n    setPopperView(view);\n  }\n  (0, _useEnhancedEffect.default)(() => {\n    // Handle case of `DateTimePicker` without time renderers\n    if (currentViewMode === 'field' && open) {\n      onClose();\n      setTimeout(() => {\n        fieldRef?.current?.setSelectedSections(view);\n        // focusing the input before the range selection is done\n        // calling it outside of timeout results in an inconsistent behavior between Safari And Chrome\n        fieldRef?.current?.focusField(view);\n      });\n    }\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _useEnhancedEffect.default)(() => {\n    if (!open) {\n      return;\n    }\n    let newView = view;\n\n    // If the current view is a field view, go to the last popper view\n    if (currentViewMode === 'field' && popperView != null) {\n      newView = popperView;\n    }\n\n    // If the current view is not the default view and both are UI views\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\n      newView = defaultView;\n    }\n    if (newView !== view) {\n      setView(newView);\n    }\n    setFocusedView(newView, true);\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const layoutProps = {\n    views,\n    view: popperView,\n    onViewChange: setView\n  };\n  return {\n    hasUIView,\n    shouldRestoreFocus,\n    layoutProps,\n    renderCurrentView: () => {\n      if (popperView == null) {\n        return null;\n      }\n      const renderer = viewRenderers[popperView];\n      if (renderer == null) {\n        return null;\n      }\n      const rendererProps = (0, _extends2.default)({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\n        views,\n        timezone,\n        onChange: setValueAndGoToNextView,\n        view: popperView,\n        onViewChange: setView,\n        focusedView,\n        onFocusedViewChange: setFocusedView,\n        showViewSwitcher: timeViewsCount > 1,\n        timeViewsCount\n      });\n      if (rendererInterceptor) {\n        return rendererInterceptor(viewRenderers, popperView, rendererProps);\n      }\n      return renderer(rendererProps);\n    }\n  };\n};\nexports.usePickerViews = usePickerViews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}