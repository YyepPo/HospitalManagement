{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\spitalmanagement\\\\src\\\\pages\\\\Appointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Grid, Card, CardContent, CardMedia, Select, MenuItem, FormControl, InputLabel, Box, AppBar, Toolbar, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { AccountCircle, Info, ContactSupport, CalendarMonth } from '@mui/icons-material';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { format, setHours, setMinutes } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst specializations = ['Dentist', 'Cardiology', 'Neurology', 'Pediatrics', 'Orthopedics', 'Dermatology', 'Ophthalmology', 'ENT'];\n\n// Generate time slots from 9:00 to 19:00 with 30-minute intervals\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 9; hour < 19; hour++) {\n    for (let minute = 0; minute < 60; minute += 30) {\n      const time = format(setMinutes(setHours(new Date(), hour), minute), 'HH:mm');\n      slots.push(time);\n    }\n  }\n  return slots;\n};\nconst timeSlots = generateTimeSlots();\n\n// Sample doctor data\nconst doctors = {\n  Dentist: [{\n    id: 1,\n    name: 'Dr. John Smith',\n    specialization: 'Dentist',\n    experience: '10 years',\n    image: 'https://source.unsplash.com/random/300x200/?dentist'\n  }, {\n    id: 2,\n    name: 'Dr. Sarah Johnson',\n    specialization: 'Dentist',\n    experience: '8 years',\n    image: 'https://source.unsplash.com/random/300x200/?dentist'\n  }],\n  Cardiology: [{\n    id: 3,\n    name: 'Dr. Michael Brown',\n    specialization: 'Cardiology',\n    experience: '15 years',\n    image: 'https://source.unsplash.com/random/300x200/?cardiologist'\n  }, {\n    id: 4,\n    name: 'Dr. Emily Davis',\n    specialization: 'Cardiology',\n    experience: '12 years',\n    image: 'https://source.unsplash.com/random/300x200/?cardiologist'\n  }],\n  Neurology: [{\n    id: 5,\n    name: 'Dr. Robert Wilson',\n    specialization: 'Neurology',\n    experience: '14 years',\n    image: 'https://source.unsplash.com/random/300x200/?neurologist'\n  }, {\n    id: 6,\n    name: 'Dr. Lisa Anderson',\n    specialization: 'Neurology',\n    experience: '9 years',\n    image: 'https://source.unsplash.com/random/300x200/?neurologist'\n  }],\n  Pediatrics: [{\n    id: 7,\n    name: 'Dr. James Taylor',\n    specialization: 'Pediatrics',\n    experience: '11 years',\n    image: 'https://source.unsplash.com/random/300x200/?pediatrician'\n  }, {\n    id: 8,\n    name: 'Dr. Maria Garcia',\n    specialization: 'Pediatrics',\n    experience: '7 years',\n    image: 'https://source.unsplash.com/random/300x200/?pediatrician'\n  }],\n  Orthopedics: [{\n    id: 9,\n    name: 'Dr. David Miller',\n    specialization: 'Orthopedics',\n    experience: '13 years',\n    image: 'https://source.unsplash.com/random/300x200/?orthopedist'\n  }, {\n    id: 10,\n    name: 'Dr. Jennifer White',\n    specialization: 'Orthopedics',\n    experience: '10 years',\n    image: 'https://source.unsplash.com/random/300x200/?orthopedist'\n  }],\n  Dermatology: [{\n    id: 11,\n    name: 'Dr. Thomas Clark',\n    specialization: 'Dermatology',\n    experience: '12 years',\n    image: 'https://source.unsplash.com/random/300x200/?dermatologist'\n  }, {\n    id: 12,\n    name: 'Dr. Patricia Lee',\n    specialization: 'Dermatology',\n    experience: '8 years',\n    image: 'https://source.unsplash.com/random/300x200/?dermatologist'\n  }],\n  Ophthalmology: [{\n    id: 13,\n    name: 'Dr. Richard Moore',\n    specialization: 'Ophthalmology',\n    experience: '15 years',\n    image: 'https://source.unsplash.com/random/300x200/?ophthalmologist'\n  }, {\n    id: 14,\n    name: 'Dr. Susan Hall',\n    specialization: 'Ophthalmology',\n    experience: '11 years',\n    image: 'https://source.unsplash.com/random/300x200/?ophthalmologist'\n  }],\n  ENT: [{\n    id: 15,\n    name: 'Dr. Charles Young',\n    specialization: 'ENT',\n    experience: '14 years',\n    image: 'https://source.unsplash.com/random/300x200/?ent'\n  }, {\n    id: 16,\n    name: 'Dr. Karen King',\n    specialization: 'ENT',\n    experience: '9 years',\n    image: 'https://source.unsplash.com/random/300x200/?ent'\n  }]\n};\nconst Appointment = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedSpecialization, setSelectedSpecialization] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const handleSpecializationChange = event => {\n    setSelectedSpecialization(event.target.value);\n    setSelectedDoctor(null);\n    setSelectedDate(new Date());\n    setSelectedTime('');\n  };\n  const handleDoctorSelect = doctor => {\n    setSelectedDoctor(doctor);\n    setOpenDialog(true);\n  };\n  const handleDateChange = newDate => {\n    setSelectedDate(newDate);\n  };\n  const handleTimeSelect = time => {\n    setSelectedTime(time);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const handleBookAppointment = () => {\n    // Here you would typically make an API call to book the appointment\n    console.log('Booking appointment for:', {\n      doctor: selectedDoctor,\n      date: format(selectedDate, 'yyyy-MM-dd'),\n      time: selectedTime\n    });\n    setOpenDialog(false);\n    // Show success message or redirect\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: '#2196f3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1,\n            cursor: 'pointer'\n          },\n          onClick: () => navigate('/'),\n          children: \"Spital Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/register'),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(CalendarMonth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/appointment'),\n            children: \"Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/about'),\n            children: \"About Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(ContactSupport, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 26\n            }, this),\n            onClick: () => navigate('/contact'),\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Book an Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"specialization-label\",\n            children: \"Select Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"specialization-label\",\n            value: selectedSpecialization,\n            label: \"Select Specialization\",\n            onChange: handleSpecializationChange,\n            children: specializations.map(specialization => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: specialization,\n              children: specialization\n            }, specialization, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), selectedSpecialization && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: doctors[selectedSpecialization].map(doctor => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              cursor: 'pointer',\n              '&:hover': {\n                boxShadow: 6\n              }\n            },\n            onClick: () => handleDoctorSelect(doctor),\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: doctor.image,\n              alt: doctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Specialization: \", doctor.specialization]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Experience: \", doctor.experience]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        onClose: handleCloseDialog,\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Book Appointment with \", selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(DateCalendar, {\n                  value: selectedDate,\n                  onChange: handleDateChange,\n                  minDate: new Date()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  mt: 2\n                },\n                children: \"Available Time Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: timeSlots.map(time => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: selectedTime === time ? \"contained\" : \"outlined\",\n                    fullWidth: true,\n                    onClick: () => handleTimeSelect(time),\n                    sx: {\n                      mb: 1\n                    },\n                    children: time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this)\n                }, time, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseDialog,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleBookAppointment,\n            variant: \"contained\",\n            disabled: !selectedDate || !selectedTime,\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Appointment, \"tGc1loBClJD1ZeRuc/vznANcyT0=\", false, function () {\n  return [useNavigate];\n});\n_c = Appointment;\nexport default Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Typography","Grid","Card","CardContent","CardMedia","Select","MenuItem","FormControl","InputLabel","Box","AppBar","Toolbar","Button","Dialog","DialogTitle","DialogContent","DialogActions","AccountCircle","Info","ContactSupport","CalendarMonth","DateCalendar","format","setHours","setMinutes","jsxDEV","_jsxDEV","Fragment","_Fragment","specializations","generateTimeSlots","slots","hour","minute","time","Date","push","timeSlots","doctors","Dentist","id","name","specialization","experience","image","Cardiology","Neurology","Pediatrics","Orthopedics","Dermatology","Ophthalmology","ENT","Appointment","_s","navigate","selectedSpecialization","setSelectedSpecialization","selectedDoctor","setSelectedDoctor","selectedDate","setSelectedDate","selectedTime","setSelectedTime","openDialog","setOpenDialog","handleSpecializationChange","event","target","value","handleDoctorSelect","doctor","handleDateChange","newDate","handleTimeSelect","handleCloseDialog","handleBookAppointment","console","log","date","children","position","sx","backgroundColor","variant","flexGrow","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","color","startIcon","maxWidth","mt","mb","component","gutterBottom","align","fullWidth","labelId","label","onChange","map","container","spacing","item","xs","sm","md","height","flexDirection","boxShadow","alt","open","onClose","minDate","disabled","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/src/pages/Appointment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport {\r\n  AccountCircle,\r\n  Info,\r\n  ContactSupport,\r\n  CalendarMonth,\r\n} from '@mui/icons-material';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport { format, setHours, setMinutes } from 'date-fns';\r\n\r\nconst specializations = [\r\n  'Dentist',\r\n  'Cardiology',\r\n  'Neurology',\r\n  'Pediatrics',\r\n  'Orthopedics',\r\n  'Dermatology',\r\n  'Ophthalmology',\r\n  'ENT',\r\n];\r\n\r\n// Generate time slots from 9:00 to 19:00 with 30-minute intervals\r\nconst generateTimeSlots = () => {\r\n  const slots = [];\r\n  for (let hour = 9; hour < 19; hour++) {\r\n    for (let minute = 0; minute < 60; minute += 30) {\r\n      const time = format(setMinutes(setHours(new Date(), hour), minute), 'HH:mm');\r\n      slots.push(time);\r\n    }\r\n  }\r\n  return slots;\r\n};\r\n\r\nconst timeSlots = generateTimeSlots();\r\n\r\n// Sample doctor data\r\nconst doctors = {\r\n  Dentist: [\r\n    { id: 1, name: 'Dr. John Smith', specialization: 'Dentist', experience: '10 years', image: 'https://source.unsplash.com/random/300x200/?dentist' },\r\n    { id: 2, name: 'Dr. Sarah Johnson', specialization: 'Dentist', experience: '8 years', image: 'https://source.unsplash.com/random/300x200/?dentist' },\r\n  ],\r\n  Cardiology: [\r\n    { id: 3, name: 'Dr. Michael Brown', specialization: 'Cardiology', experience: '15 years', image: 'https://source.unsplash.com/random/300x200/?cardiologist' },\r\n    { id: 4, name: 'Dr. Emily Davis', specialization: 'Cardiology', experience: '12 years', image: 'https://source.unsplash.com/random/300x200/?cardiologist' },\r\n  ],\r\n  Neurology: [\r\n    { id: 5, name: 'Dr. Robert Wilson', specialization: 'Neurology', experience: '14 years', image: 'https://source.unsplash.com/random/300x200/?neurologist' },\r\n    { id: 6, name: 'Dr. Lisa Anderson', specialization: 'Neurology', experience: '9 years', image: 'https://source.unsplash.com/random/300x200/?neurologist' },\r\n  ],\r\n  Pediatrics: [\r\n    { id: 7, name: 'Dr. James Taylor', specialization: 'Pediatrics', experience: '11 years', image: 'https://source.unsplash.com/random/300x200/?pediatrician' },\r\n    { id: 8, name: 'Dr. Maria Garcia', specialization: 'Pediatrics', experience: '7 years', image: 'https://source.unsplash.com/random/300x200/?pediatrician' },\r\n  ],\r\n  Orthopedics: [\r\n    { id: 9, name: 'Dr. David Miller', specialization: 'Orthopedics', experience: '13 years', image: 'https://source.unsplash.com/random/300x200/?orthopedist' },\r\n    { id: 10, name: 'Dr. Jennifer White', specialization: 'Orthopedics', experience: '10 years', image: 'https://source.unsplash.com/random/300x200/?orthopedist' },\r\n  ],\r\n  Dermatology: [\r\n    { id: 11, name: 'Dr. Thomas Clark', specialization: 'Dermatology', experience: '12 years', image: 'https://source.unsplash.com/random/300x200/?dermatologist' },\r\n    { id: 12, name: 'Dr. Patricia Lee', specialization: 'Dermatology', experience: '8 years', image: 'https://source.unsplash.com/random/300x200/?dermatologist' },\r\n  ],\r\n  Ophthalmology: [\r\n    { id: 13, name: 'Dr. Richard Moore', specialization: 'Ophthalmology', experience: '15 years', image: 'https://source.unsplash.com/random/300x200/?ophthalmologist' },\r\n    { id: 14, name: 'Dr. Susan Hall', specialization: 'Ophthalmology', experience: '11 years', image: 'https://source.unsplash.com/random/300x200/?ophthalmologist' },\r\n  ],\r\n  ENT: [\r\n    { id: 15, name: 'Dr. Charles Young', specialization: 'ENT', experience: '14 years', image: 'https://source.unsplash.com/random/300x200/?ent' },\r\n    { id: 16, name: 'Dr. Karen King', specialization: 'ENT', experience: '9 years', image: 'https://source.unsplash.com/random/300x200/?ent' },\r\n  ],\r\n};\r\n\r\nconst Appointment = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedSpecialization, setSelectedSpecialization] = useState('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleSpecializationChange = (event) => {\r\n    setSelectedSpecialization(event.target.value);\r\n    setSelectedDoctor(null);\r\n    setSelectedDate(new Date());\r\n    setSelectedTime('');\r\n  };\r\n\r\n  const handleDoctorSelect = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  const handleTimeSelect = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleBookAppointment = () => {\r\n    // Here you would typically make an API call to book the appointment\r\n    console.log('Booking appointment for:', {\r\n      doctor: selectedDoctor,\r\n      date: format(selectedDate, 'yyyy-MM-dd'),\r\n      time: selectedTime,\r\n    });\r\n    setOpenDialog(false);\r\n    // Show success message or redirect\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" sx={{ backgroundColor: '#2196f3' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, cursor: 'pointer' }} onClick={() => navigate('/')}>\r\n            Spital Management\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button\r\n              color=\"inherit\"\r\n              startIcon={<AccountCircle />}\r\n              onClick={() => navigate('/register')}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              startIcon={<CalendarMonth />}\r\n              onClick={() => navigate('/appointment')}\r\n            >\r\n              Appointment\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              startIcon={<Info />}\r\n              onClick={() => navigate('/about')}\r\n            >\r\n              About Us\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              startIcon={<ContactSupport />}\r\n              onClick={() => navigate('/contact')}\r\n            >\r\n              Contact Us\r\n            </Button>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n          Book an Appointment\r\n        </Typography>\r\n        \r\n        <Box sx={{ mb: 4 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"specialization-label\">Select Specialization</InputLabel>\r\n            <Select\r\n              labelId=\"specialization-label\"\r\n              value={selectedSpecialization}\r\n              label=\"Select Specialization\"\r\n              onChange={handleSpecializationChange}\r\n            >\r\n              {specializations.map((specialization) => (\r\n                <MenuItem key={specialization} value={specialization}>\r\n                  {specialization}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        {selectedSpecialization && (\r\n          <Grid container spacing={4}>\r\n            {doctors[selectedSpecialization].map((doctor) => (\r\n              <Grid item xs={12} sm={6} md={4} key={doctor.id}>\r\n                <Card \r\n                  sx={{ \r\n                    height: '100%', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    cursor: 'pointer',\r\n                    '&:hover': {\r\n                      boxShadow: 6,\r\n                    },\r\n                  }}\r\n                  onClick={() => handleDoctorSelect(doctor)}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"200\"\r\n                    image={doctor.image}\r\n                    alt={doctor.name}\r\n                  />\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {doctor.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Specialization: {doctor.specialization}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Experience: {doctor.experience}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n\r\n        <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            Book Appointment with {selectedDoctor?.name}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Box sx={{ mt: 2 }}>\r\n                  <DateCalendar\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    minDate={new Date()}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                  Available Time Slots\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {timeSlots.map((time) => (\r\n                    <Grid item xs={6} sm={4} key={time}>\r\n                      <Button\r\n                        variant={selectedTime === time ? \"contained\" : \"outlined\"}\r\n                        fullWidth\r\n                        onClick={() => handleTimeSelect(time)}\r\n                        sx={{ mb: 1 }}\r\n                      >\r\n                        {time}\r\n                      </Button>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDialog}>Cancel</Button>\r\n            <Button \r\n              onClick={handleBookAppointment}\r\n              variant=\"contained\"\r\n              disabled={!selectedDate || !selectedTime}\r\n            >\r\n              Book Appointment\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appointment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}