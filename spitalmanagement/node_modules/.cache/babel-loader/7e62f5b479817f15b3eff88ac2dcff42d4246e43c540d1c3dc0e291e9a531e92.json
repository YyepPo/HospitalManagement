{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useViews = useViews;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _utils = require(\"@mui/utils\");\nlet warnedOnceNotValidView = false;\nfunction useViews({\n  onChange,\n  onViewChange,\n  openTo,\n  view: inView,\n  views,\n  autoFocus,\n  focusedView: inFocusedView,\n  onFocusedViewChange\n}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI X: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI X: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const previousOpenTo = React.useRef(openTo);\n  const previousViews = React.useRef(views);\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = (0, _utils.unstable_useControlled)({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = (0, _utils.unstable_useControlled)({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  React.useEffect(() => {\n    // Update the current view when `openTo` or `views` props change\n    if (previousOpenTo.current && previousOpenTo.current !== openTo || previousViews.current && previousViews.current.some(previousView => !views.includes(previousView))) {\n      setView(views.includes(openTo) ? openTo : views[0]);\n      previousViews.current = views;\n      previousOpenTo.current = openTo;\n    }\n  }, [openTo, setView, view, views]);\n  const viewIndex = views.indexOf(view);\n  const previousView = views[viewIndex - 1] ?? null;\n  const nextView = views[viewIndex + 1] ?? null;\n  const handleFocusedViewChange = (0, _useEventCallback.default)((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view switching\n      );\n    }\n    onFocusedViewChange?.(viewToFocus, hasFocus);\n  });\n  const handleChangeView = (0, _useEventCallback.default)(newView => {\n    // always keep the focused view in sync\n    handleFocusedViewChange(newView, true);\n    if (newView === view) {\n      return;\n    }\n    setView(newView);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = (0, _useEventCallback.default)(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n  });\n  const setValueAndGoToNextView = (0, _useEventCallback.default)((value, currentViewSelectionState, selectedView) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const hasMoreViews = selectedView ?\n    // handles case like `DateTimePicker`, where a view might return a `finish` selection state\n    // but when it's not the final view given all `views` -> overall selection state should be `partial`.\n    views.indexOf(selectedView) < views.length - 1 : Boolean(nextView);\n    const globalSelectionState = isSelectionFinishedOnCurrentView && hasMoreViews ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState, selectedView);\n    // Detects if the selected view is not the active one.\n    // Can happen if multiple views are displayed, like in `DesktopDateTimePicker` or `MultiSectionDigitalClock`.\n    if (selectedView && selectedView !== view) {\n      const nextViewAfterSelected = views[views.indexOf(selectedView) + 1];\n      if (nextViewAfterSelected) {\n        // move to next view after the selected one\n        handleChangeView(nextViewAfterSelected);\n      }\n    } else if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    // Always return up-to-date default view instead of the initial one (i.e. defaultView.current)\n    defaultView: views.includes(openTo) ? openTo : views[0],\n    goToNextView,\n    setValueAndGoToNextView\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","useViews","React","_useEventCallback","_utils","warnedOnceNotValidView","onChange","onViewChange","openTo","view","inView","views","autoFocus","focusedView","inFocusedView","onFocusedViewChange","process","env","NODE_ENV","includes","console","warn","join","previousOpenTo","useRef","previousViews","defaultView","setView","unstable_useControlled","name","state","controlled","current","defaultFocusedView","setFocusedView","useEffect","some","previousView","viewIndex","indexOf","nextView","handleFocusedViewChange","viewToFocus","hasFocus","prevFocusedView","handleChangeView","newView","goToNextView","setValueAndGoToNextView","currentViewSelectionState","selectedView","isSelectionFinishedOnCurrentView","hasMoreViews","length","Boolean","globalSelectionState","nextViewAfterSelected"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/node_modules/@mui/x-date-pickers/node/internals/hooks/useViews.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useViews = useViews;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _utils = require(\"@mui/utils\");\nlet warnedOnceNotValidView = false;\nfunction useViews({\n  onChange,\n  onViewChange,\n  openTo,\n  view: inView,\n  views,\n  autoFocus,\n  focusedView: inFocusedView,\n  onFocusedViewChange\n}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI X: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI X: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const previousOpenTo = React.useRef(openTo);\n  const previousViews = React.useRef(views);\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = (0, _utils.unstable_useControlled)({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = (0, _utils.unstable_useControlled)({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  React.useEffect(() => {\n    // Update the current view when `openTo` or `views` props change\n    if (previousOpenTo.current && previousOpenTo.current !== openTo || previousViews.current && previousViews.current.some(previousView => !views.includes(previousView))) {\n      setView(views.includes(openTo) ? openTo : views[0]);\n      previousViews.current = views;\n      previousOpenTo.current = openTo;\n    }\n  }, [openTo, setView, view, views]);\n  const viewIndex = views.indexOf(view);\n  const previousView = views[viewIndex - 1] ?? null;\n  const nextView = views[viewIndex + 1] ?? null;\n  const handleFocusedViewChange = (0, _useEventCallback.default)((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view switching\n      );\n    }\n    onFocusedViewChange?.(viewToFocus, hasFocus);\n  });\n  const handleChangeView = (0, _useEventCallback.default)(newView => {\n    // always keep the focused view in sync\n    handleFocusedViewChange(newView, true);\n    if (newView === view) {\n      return;\n    }\n    setView(newView);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = (0, _useEventCallback.default)(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n  });\n  const setValueAndGoToNextView = (0, _useEventCallback.default)((value, currentViewSelectionState, selectedView) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const hasMoreViews = selectedView ?\n    // handles case like `DateTimePicker`, where a view might return a `finish` selection state\n    // but when it's not the final view given all `views` -> overall selection state should be `partial`.\n    views.indexOf(selectedView) < views.length - 1 : Boolean(nextView);\n    const globalSelectionState = isSelectionFinishedOnCurrentView && hasMoreViews ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState, selectedView);\n    // Detects if the selected view is not the active one.\n    // Can happen if multiple views are displayed, like in `DesktopDateTimePicker` or `MultiSectionDigitalClock`.\n    if (selectedView && selectedView !== view) {\n      const nextViewAfterSelected = views[views.indexOf(selectedView) + 1];\n      if (nextViewAfterSelected) {\n        // move to next view after the selected one\n        handleChangeView(nextViewAfterSelected);\n      }\n    } else if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    // Always return up-to-date default view instead of the initial one (i.e. defaultView.current)\n    defaultView: views.includes(openTo) ? openTo : views[0],\n    goToNextView,\n    setValueAndGoToNextView\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}