{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useValueWithTimezone = exports.useControlledValueWithTimezone = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useControlled = _interopRequireDefault(require(\"@mui/utils/useControlled\"));\nvar _useUtils = require(\"./useUtils\");\n/**\n * Hooks making sure that:\n * - The value returned by `onChange` always have the timezone of `props.value` or `props.defaultValue` if defined\n * - The value rendered is always the one from `props.timezone` if defined\n */\nconst useValueWithTimezone = ({\n  timezone: timezoneProp,\n  value: valueProp,\n  defaultValue,\n  referenceDate,\n  onChange,\n  valueManager\n}) => {\n  const utils = (0, _useUtils.useUtils)();\n  const firstDefaultValue = React.useRef(defaultValue);\n  const inputValue = valueProp ?? firstDefaultValue.current ?? valueManager.emptyValue;\n  const inputTimezone = React.useMemo(() => valueManager.getTimezone(utils, inputValue), [utils, valueManager, inputValue]);\n  const setInputTimezone = (0, _useEventCallback.default)(newValue => {\n    if (inputTimezone == null) {\n      return newValue;\n    }\n    return valueManager.setTimezone(utils, inputTimezone, newValue);\n  });\n  let timezoneToRender;\n  if (timezoneProp) {\n    timezoneToRender = timezoneProp;\n  } else if (inputTimezone) {\n    timezoneToRender = inputTimezone;\n  } else if (referenceDate) {\n    timezoneToRender = utils.getTimezone(referenceDate);\n  } else {\n    timezoneToRender = 'default';\n  }\n  const valueWithTimezoneToRender = React.useMemo(() => valueManager.setTimezone(utils, timezoneToRender, inputValue), [valueManager, utils, timezoneToRender, inputValue]);\n  const handleValueChange = (0, _useEventCallback.default)((newValue, ...otherParams) => {\n    const newValueWithInputTimezone = setInputTimezone(newValue);\n    onChange?.(newValueWithInputTimezone, ...otherParams);\n  });\n  return {\n    value: valueWithTimezoneToRender,\n    handleValueChange,\n    timezone: timezoneToRender\n  };\n};\n\n/**\n * Wrapper around `useControlled` and `useValueWithTimezone`\n */\nexports.useValueWithTimezone = useValueWithTimezone;\nconst useControlledValueWithTimezone = ({\n  name,\n  timezone: timezoneProp,\n  value: valueProp,\n  defaultValue,\n  referenceDate,\n  onChange: onChangeProp,\n  valueManager\n}) => {\n  const [valueWithInputTimezone, setValue] = (0, _useControlled.default)({\n    name,\n    state: 'value',\n    controlled: valueProp,\n    default: defaultValue ?? valueManager.emptyValue\n  });\n  const onChange = (0, _useEventCallback.default)((newValue, ...otherParams) => {\n    setValue(newValue);\n    onChangeProp?.(newValue, ...otherParams);\n  });\n  return useValueWithTimezone({\n    timezone: timezoneProp,\n    value: valueWithInputTimezone,\n    defaultValue: undefined,\n    referenceDate,\n    onChange,\n    valueManager\n  });\n};\nexports.useControlledValueWithTimezone = useControlledValueWithTimezone;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","useValueWithTimezone","useControlledValueWithTimezone","React","_useEventCallback","_useControlled","_useUtils","timezone","timezoneProp","valueProp","defaultValue","referenceDate","onChange","valueManager","utils","useUtils","firstDefaultValue","useRef","inputValue","current","emptyValue","inputTimezone","useMemo","getTimezone","setInputTimezone","newValue","setTimezone","timezoneToRender","valueWithTimezoneToRender","handleValueChange","otherParams","newValueWithInputTimezone","name","onChangeProp","valueWithInputTimezone","setValue","state","controlled","undefined"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/node_modules/@mui/x-date-pickers/node/internals/hooks/useValueWithTimezone.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useValueWithTimezone = exports.useControlledValueWithTimezone = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useControlled = _interopRequireDefault(require(\"@mui/utils/useControlled\"));\nvar _useUtils = require(\"./useUtils\");\n/**\n * Hooks making sure that:\n * - The value returned by `onChange` always have the timezone of `props.value` or `props.defaultValue` if defined\n * - The value rendered is always the one from `props.timezone` if defined\n */\nconst useValueWithTimezone = ({\n  timezone: timezoneProp,\n  value: valueProp,\n  defaultValue,\n  referenceDate,\n  onChange,\n  valueManager\n}) => {\n  const utils = (0, _useUtils.useUtils)();\n  const firstDefaultValue = React.useRef(defaultValue);\n  const inputValue = valueProp ?? firstDefaultValue.current ?? valueManager.emptyValue;\n  const inputTimezone = React.useMemo(() => valueManager.getTimezone(utils, inputValue), [utils, valueManager, inputValue]);\n  const setInputTimezone = (0, _useEventCallback.default)(newValue => {\n    if (inputTimezone == null) {\n      return newValue;\n    }\n    return valueManager.setTimezone(utils, inputTimezone, newValue);\n  });\n  let timezoneToRender;\n  if (timezoneProp) {\n    timezoneToRender = timezoneProp;\n  } else if (inputTimezone) {\n    timezoneToRender = inputTimezone;\n  } else if (referenceDate) {\n    timezoneToRender = utils.getTimezone(referenceDate);\n  } else {\n    timezoneToRender = 'default';\n  }\n  const valueWithTimezoneToRender = React.useMemo(() => valueManager.setTimezone(utils, timezoneToRender, inputValue), [valueManager, utils, timezoneToRender, inputValue]);\n  const handleValueChange = (0, _useEventCallback.default)((newValue, ...otherParams) => {\n    const newValueWithInputTimezone = setInputTimezone(newValue);\n    onChange?.(newValueWithInputTimezone, ...otherParams);\n  });\n  return {\n    value: valueWithTimezoneToRender,\n    handleValueChange,\n    timezone: timezoneToRender\n  };\n};\n\n/**\n * Wrapper around `useControlled` and `useValueWithTimezone`\n */\nexports.useValueWithTimezone = useValueWithTimezone;\nconst useControlledValueWithTimezone = ({\n  name,\n  timezone: timezoneProp,\n  value: valueProp,\n  defaultValue,\n  referenceDate,\n  onChange: onChangeProp,\n  valueManager\n}) => {\n  const [valueWithInputTimezone, setValue] = (0, _useControlled.default)({\n    name,\n    state: 'value',\n    controlled: valueProp,\n    default: defaultValue ?? valueManager.emptyValue\n  });\n  const onChange = (0, _useEventCallback.default)((newValue, ...otherParams) => {\n    setValue(newValue);\n    onChangeProp?.(newValue, ...otherParams);\n  });\n  return useValueWithTimezone({\n    timezone: timezoneProp,\n    value: valueWithInputTimezone,\n    defaultValue: undefined,\n    referenceDate,\n    onChange,\n    valueManager\n  });\n};\nexports.useControlledValueWithTimezone = useControlledValueWithTimezone;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}