{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\spitalmanagement\\\\src\\\\pages\\\\MyAccount.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Select, MenuItem, FormControl, InputLabel, Tabs, Tab, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\n\n// Temporary data - In a real app, this would come from your backend\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockUser = {\n  id: 1,\n  name: \"John Doe\",\n  email: \"john@example.com\",\n  role: \"admin\",\n  // Change this to test different roles: \"admin\", \"doctor\", \"patient\"\n  phone: \"+1234567890\",\n  address: \"123 Main St\",\n  dateOfBirth: \"1990-01-01\"\n};\nconst mockUsers = [{\n  id: 1,\n  name: \"John Doe\",\n  email: \"john@example.com\",\n  role: \"admin\"\n}, {\n  id: 2,\n  name: \"Dr. Smith\",\n  email: \"smith@example.com\",\n  role: \"doctor\"\n}, {\n  id: 3,\n  name: \"Jane Patient\",\n  email: \"jane@example.com\",\n  role: \"patient\"\n}];\nconst mockAppointments = [{\n  id: 1,\n  patientName: \"Jane Doe\",\n  date: \"2024-03-20\",\n  time: \"10:00\",\n  status: \"Scheduled\"\n}, {\n  id: 2,\n  patientName: \"John Smith\",\n  date: \"2024-03-21\",\n  time: \"11:30\",\n  status: \"Scheduled\"\n}];\n\n// Patient View Component\nconst PatientView = ({\n  user\n}) => /*#__PURE__*/_jsxDEV(Paper, {\n  sx: {\n    p: 3,\n    mt: 3\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    children: \"Personal Information\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \" \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \" \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \" \", user.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \" \", user.dateOfBirth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n// Doctor View Component\n_c = PatientView;\nconst DoctorView = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Week Starting\",\n        value: selectedDate,\n        onChange: newValue => setSelectedDate(newValue),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Patient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: mockAppointments.map(appointment => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: appointment.patientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: appointment.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: appointment.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: appointment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n// Admin View Component\n_s(DoctorView, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c2 = DoctorView;\nconst AdminView = () => {\n  _s2();\n  const [openSchedule, setOpenSchedule] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const handleRoleChange = (userId, newRole) => {\n    console.log(`Changing role for user ${userId} to ${newRole}`);\n    // Implement role change logic here\n  };\n  const handleScheduleDoctor = () => {\n    setOpenSchedule(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: mockUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  fullWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    value: user.role,\n                    onChange: e => handleRoleChange(user.id, e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"admin\",\n                      children: \"Admin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"doctor\",\n                      children: \"Doctor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"patient\",\n                      children: \"Patient\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"manager\",\n                      children: \"Manager\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.role === 'doctor' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  onClick: handleScheduleDoctor,\n                  children: \"Set Schedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openSchedule,\n      onClose: () => setOpenSchedule(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Set Doctor Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Set Working Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Start Time\",\n                type: \"time\",\n                defaultValue: \"09:00\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"End Time\",\n                type: \"time\",\n                defaultValue: \"17:00\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                sx: {\n                  mt: 2\n                },\n                children: \"Working Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'].map(day => /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                sx: {\n                  m: 0.5\n                },\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenSchedule(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setOpenSchedule(false),\n          children: \"Save Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(AdminView, \"Srx9EpRk2mRFmCf94gieBeF43MU=\");\n_c3 = AdminView;\nconst MyAccount = () => {\n  _s3();\n  const navigate = useNavigate();\n\n  // Render different views based on user role\n  const renderContent = () => {\n    switch (mockUser.role) {\n      case 'patient':\n        return /*#__PURE__*/_jsxDEV(PatientView, {\n          user: mockUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 16\n        }, this);\n      case 'doctor':\n        return /*#__PURE__*/_jsxDEV(DoctorView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 16\n        }, this);\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(AdminView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s3(MyAccount, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c4 = MyAccount;\nexport default MyAccount;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PatientView\");\n$RefreshReg$(_c2, \"DoctorView\");\n$RefreshReg$(_c3, \"AdminView\");\n$RefreshReg$(_c4, \"MyAccount\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Typography","Box","Paper","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Select","MenuItem","FormControl","InputLabel","Tabs","Tab","Dialog","DialogTitle","DialogContent","DialogActions","TextField","DatePicker","format","jsxDEV","_jsxDEV","Fragment","_Fragment","mockUser","id","name","email","role","phone","address","dateOfBirth","mockUsers","mockAppointments","patientName","date","time","status","PatientView","user","sx","p","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","_c","DoctorView","_s","selectedDate","setSelectedDate","Date","mb","label","value","onChange","newValue","map","appointment","_c2","AdminView","_s2","openSchedule","setOpenSchedule","selectedDoctor","setSelectedDoctor","handleRoleChange","userId","newRole","console","log","handleScheduleDoctor","size","fullWidth","e","target","onClick","open","onClose","maxWidth","type","defaultValue","InputLabelProps","shrink","day","m","_c3","MyAccount","_s3","navigate","renderContent","_c4","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/src/pages/MyAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Tabs,\r\n  Tab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { format } from 'date-fns';\r\n\r\n// Temporary data - In a real app, this would come from your backend\r\nconst mockUser = {\r\n  id: 1,\r\n  name: \"John Doe\",\r\n  email: \"john@example.com\",\r\n  role: \"admin\", // Change this to test different roles: \"admin\", \"doctor\", \"patient\"\r\n  phone: \"+1234567890\",\r\n  address: \"123 Main St\",\r\n  dateOfBirth: \"1990-01-01\"\r\n};\r\n\r\nconst mockUsers = [\r\n  { id: 1, name: \"John Doe\", email: \"john@example.com\", role: \"admin\" },\r\n  { id: 2, name: \"Dr. Smith\", email: \"smith@example.com\", role: \"doctor\" },\r\n  { id: 3, name: \"Jane Patient\", email: \"jane@example.com\", role: \"patient\" },\r\n];\r\n\r\nconst mockAppointments = [\r\n  { id: 1, patientName: \"Jane Doe\", date: \"2024-03-20\", time: \"10:00\", status: \"Scheduled\" },\r\n  { id: 2, patientName: \"John Smith\", date: \"2024-03-21\", time: \"11:30\", status: \"Scheduled\" },\r\n];\r\n\r\n// Patient View Component\r\nconst PatientView = ({ user }) => (\r\n  <Paper sx={{ p: 3, mt: 3 }}>\r\n    <Typography variant=\"h6\" gutterBottom>Personal Information</Typography>\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography><strong>Name:</strong> {user.name}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography><strong>Email:</strong> {user.email}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography><strong>Phone:</strong> {user.phone}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography><strong>Address:</strong> {user.address}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography><strong>Date of Birth:</strong> {user.dateOfBirth}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n);\r\n\r\n// Doctor View Component\r\nconst DoctorView = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mt: 3 }}>\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Weekly Schedule</Typography>\r\n        <DatePicker\r\n          label=\"Week Starting\"\r\n          value={selectedDate}\r\n          onChange={(newValue) => setSelectedDate(newValue)}\r\n          sx={{ mb: 2 }}\r\n        />\r\n      </Box>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Patient Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell>Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {mockAppointments.map((appointment) => (\r\n              <TableRow key={appointment.id}>\r\n                <TableCell>{appointment.patientName}</TableCell>\r\n                <TableCell>{appointment.date}</TableCell>\r\n                <TableCell>{appointment.time}</TableCell>\r\n                <TableCell>{appointment.status}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// Admin View Component\r\nconst AdminView = () => {\r\n  const [openSchedule, setOpenSchedule] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n\r\n  const handleRoleChange = (userId, newRole) => {\r\n    console.log(`Changing role for user ${userId} to ${newRole}`);\r\n    // Implement role change logic here\r\n  };\r\n\r\n  const handleScheduleDoctor = () => {\r\n    setOpenSchedule(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ p: 3, mt: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>User Management</Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Role</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {mockUsers.map((user) => (\r\n                <TableRow key={user.id}>\r\n                  <TableCell>{user.name}</TableCell>\r\n                  <TableCell>{user.email}</TableCell>\r\n                  <TableCell>\r\n                    <FormControl size=\"small\" fullWidth>\r\n                      <Select\r\n                        value={user.role}\r\n                        onChange={(e) => handleRoleChange(user.id, e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"admin\">Admin</MenuItem>\r\n                        <MenuItem value=\"doctor\">Doctor</MenuItem>\r\n                        <MenuItem value=\"patient\">Patient</MenuItem>\r\n                        <MenuItem value=\"manager\">Manager</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {user.role === 'doctor' && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={handleScheduleDoctor}\r\n                      >\r\n                        Set Schedule\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n\r\n      {/* Doctor Schedule Dialog */}\r\n      <Dialog open={openSchedule} onClose={() => setOpenSchedule(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Set Doctor Schedule</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Set Working Hours\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  label=\"Start Time\"\r\n                  type=\"time\"\r\n                  defaultValue=\"09:00\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  label=\"End Time\"\r\n                  type=\"time\"\r\n                  defaultValue=\"17:00\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 2 }}>\r\n                  Working Days\r\n                </Typography>\r\n                {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'].map((day) => (\r\n                  <Button\r\n                    key={day}\r\n                    variant=\"outlined\"\r\n                    sx={{ m: 0.5 }}\r\n                  >\r\n                    {day}\r\n                  </Button>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenSchedule(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={() => setOpenSchedule(false)}>\r\n            Save Schedule\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyAccount = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Render different views based on user role\r\n  const renderContent = () => {\r\n    switch (mockUser.role) {\r\n      case 'patient':\r\n        return <PatientView user={mockUser} />;\r\n      case 'doctor':\r\n        return <DoctorView />;\r\n      case 'admin':\r\n        return <AdminView />;\r\n      default:\r\n        return <Typography>Access Denied</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        My Account\r\n      </Typography>\r\n      {renderContent()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyAccount; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}