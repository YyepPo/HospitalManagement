{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOpenState = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nconst useOpenState = ({\n  open,\n  onOpen,\n  onClose\n}) => {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [openState, setIsOpenState] = React.useState(false);\n\n  // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (for example initially opened)\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n      setIsOpenState(open);\n    }\n  }, [isControllingOpenProp, open]);\n  const setIsOpen = React.useCallback(newIsOpen => {\n    if (!isControllingOpenProp) {\n      setIsOpenState(newIsOpen);\n    }\n    if (newIsOpen && onOpen) {\n      onOpen();\n    }\n    if (!newIsOpen && onClose) {\n      onClose();\n    }\n  }, [isControllingOpenProp, onOpen, onClose]);\n  return {\n    isOpen: openState,\n    setIsOpen\n  };\n};\nexports.useOpenState = useOpenState;","map":{"version":3,"names":["_interopRequireWildcard","require","default","Object","defineProperty","exports","value","useOpenState","React","open","onOpen","onClose","isControllingOpenProp","useRef","current","openState","setIsOpenState","useState","useEffect","Error","setIsOpen","useCallback","newIsOpen","isOpen"],"sources":["C:/Users/LENOVO/Desktop/spitalmanagement/node_modules/@mui/x-date-pickers/node/internals/hooks/useOpenState.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOpenState = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nconst useOpenState = ({\n  open,\n  onOpen,\n  onClose\n}) => {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [openState, setIsOpenState] = React.useState(false);\n\n  // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (for example initially opened)\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n      setIsOpenState(open);\n    }\n  }, [isControllingOpenProp, open]);\n  const setIsOpen = React.useCallback(newIsOpen => {\n    if (!isControllingOpenProp) {\n      setIsOpenState(newIsOpen);\n    }\n    if (newIsOpen && onOpen) {\n      onOpen();\n    }\n    if (!newIsOpen && onClose) {\n      onClose();\n    }\n  }, [isControllingOpenProp, onOpen, onClose]);\n  return {\n    isOpen: openState,\n    setIsOpen\n  };\n};\nexports.useOpenState = useOpenState;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,KAAK,GAAGR,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,MAAMM,YAAY,GAAGA,CAAC;EACpBE,IAAI;EACJC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ,MAAMC,qBAAqB,GAAGJ,KAAK,CAACK,MAAM,CAAC,OAAOJ,IAAI,KAAK,SAAS,CAAC,CAACK,OAAO;EAC7E,MAAM,CAACC,SAAS,EAAEC,cAAc,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA;EACAT,KAAK,CAACU,SAAS,CAAC,MAAM;IACpB,IAAIN,qBAAqB,EAAE;MACzB,IAAI,OAAOH,IAAI,KAAK,SAAS,EAAE;QAC7B,MAAM,IAAIU,KAAK,CAAC,oEAAoE,CAAC;MACvF;MACAH,cAAc,CAACP,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,CAACG,qBAAqB,EAAEH,IAAI,CAAC,CAAC;EACjC,MAAMW,SAAS,GAAGZ,KAAK,CAACa,WAAW,CAACC,SAAS,IAAI;IAC/C,IAAI,CAACV,qBAAqB,EAAE;MAC1BI,cAAc,CAACM,SAAS,CAAC;IAC3B;IACA,IAAIA,SAAS,IAAIZ,MAAM,EAAE;MACvBA,MAAM,CAAC,CAAC;IACV;IACA,IAAI,CAACY,SAAS,IAAIX,OAAO,EAAE;MACzBA,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACC,qBAAqB,EAAEF,MAAM,EAAEC,OAAO,CAAC,CAAC;EAC5C,OAAO;IACLY,MAAM,EAAER,SAAS;IACjBK;EACF,CAAC;AACH,CAAC;AACDf,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}